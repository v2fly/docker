on:
  push:
    paths:
      - "ReleaseTag"

name: docker push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout codebase
        uses: actions/checkout@v2
      
      - name: Set env
        run: |
          echo "WORKDIR=$(dirname $GITHUB_WORKSPACE)" >> $GITHUB_ENV
          echo "TAG=$(wget -qO- https://raw.githubusercontent.com/v2fly/docker/master/ReleaseTag | head -n1)" >> $GITHUB_ENV

      - name: Install Golang
        uses: actions/setup-go@v2
        with: 
          go-version: 1.15.x
          
      - name: Build Target
        run: |
          cp ${WORKDIR}/DockerHub/* ${PWD}
          chmod +x v2ray.sh
          bash v2ray.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build latest
        run: |
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/test:latest" \
          --file Dockerfile .
       
      - name: Build tag
        run: |
          docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
          --output "type=image,push=true" \
          --tag "${{ secrets.DOCKER_USERNAME }}/test:${{ env.TAG }}" \
          --file Dockerfile .

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      
      - name: Set env
        run: |
          echo "TAG=$(wget -qO- https://raw.githubusercontent.com/v2fly/docker/master/ReleaseTag | head -n1)" >> $GITHUB_ENV

      - name: Test Docker image
        run: |
          docker run --rm --entrypoint /usr/bin/v2ray ${{ secrets.DOCKER_USERNAME }}/test:latest -version
          docker run --rm --entrypoint /usr/bin/v2ray ${{ secrets.DOCKER_USERNAME }}/test:${{ env.TAG }} -version
